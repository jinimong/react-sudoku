{"version":3,"sources":["reducers/actions.ts","reducers/index.ts","utils/check-grid/index.ts","utils/compare-arrays/index.ts","utils/copy-grid/index.ts","utils/create-full-grid/index.ts","utils/fill-grid/index.ts","utils/get-random-index/index.ts","utils/identify-square/index.ts","global/index.ts","utils/remove-numbers/index.ts","utils/shuffle/index.ts","utils/solve-grid/index.ts","utils/is-in/row/index.ts","utils/is-in/col/index.ts","utils/is-in/square/index.ts","reducers/reducer.ts","components/grid/block/styles/index.ts","components/grid/block/index.tsx","components/grid/styles/index.ts","components/grid/index.tsx","components/new-button/index.tsx","components/numbers/button/index.tsx","components/numbers/styles/index.ts","components/numbers/index.tsx","components/styles/button/index.ts","components/styles/card/index.ts","components/styles/content/index.ts","components/styles/title/index.ts","core/configure-store/index.ts","core/service-worker/index.ts","styles/global.ts","index.tsx","styles/theme.ts","reducers/types.ts"],"names":["createGrid","type","types","fillBlock","value","coords","selectBlock","reducer","checkGrid","grid","i","j","compareArrays","arr1","arr2","Array","isArray","length","len","copyGrid","gridCopy","r","c","createFullGrid","fillGrid","numbers","row","col","Math","floor","shuffle","isInRow","isInCol","square","identifySquare","isInSquare","getRandomIndex","random","identifyWorkingSquare","x","push","counter","removeNumbers","attempts","backup","global","solveGrid","array","includes","initialState","state","action","solvedGrid","challengeGrid","workingGrid","alert","selectedBlock","Container","styled","div","active","puzzle","theme","css","colors","blue","white","black","transition","lightBlue","Block","colIndex","rowIndex","useSelector","isActive","isPuzzle","dispatch","useDispatch","data-cy","onClick","Row","Grid","selectedValue","create","useCallback","fill","n","useMousetrap","useEffect","Children","toArray","map","_","NewButton","createNewGrid","window","confirm","Button","NumberButton","Numbers","key","button","Card","Content","Title","h1","persistConfig","storage","persistedReducer","persistReducer","configureStore","store","createStore","devToolsEnhancer","persistor","persistStore","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","createGlobalStyle","background","ReactDOM","render","loading","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","CREATE_GRID","FILL_BLOCK","SELECT_BLOCK"],"mappings":"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","file":"static/js/main.c0d39b20.chunk.js","sourcesContent":["import { Action, AnyAction } from 'redux'\nimport { BLOCK_COORDS, NUMBERS } from 'typings'\nimport * as types from './types'\n\nexport const createGrid = (): Action => ({\n  type: types.CREATE_GRID,\n})\n\nexport const fillBlock = (value: NUMBERS, coords: BLOCK_COORDS): AnyAction => ({\n  coords,\n  type: types.FILL_BLOCK,\n  value,\n})\n\nexport const selectBlock = (coords: BLOCK_COORDS): AnyAction => ({\n  coords,\n  type: types.SELECT_BLOCK,\n})\n","import reducer from './reducer'\n\nexport * from './actions'\nexport * from './interfaces'\n\nexport type IReducer = ReturnType<typeof reducer>\nexport default reducer\n","import { GRID } from 'typings'\n\nfunction checkGrid(grid: GRID): boolean {\n  for (let i = 0; i < 9; ++i) {\n    for (let j = 0; j < 9; ++j) {\n      if (grid[i][j] === 0) return false\n    }\n  }\n  return true\n}\n\nexport default checkGrid\n","function compareArrays(arr1: any[], arr2: any[]): boolean {\n  if (!Array.isArray(arr1) && !Array.isArray(arr2)) return arr1 === arr2\n  if (arr1.length !== arr2.length) return false\n  for (let i = 0, len = arr1.length; i < len; i++) {\n    if (!compareArrays(arr1[i], arr2[i])) return false\n  }\n  return true\n}\n\nexport default compareArrays\n","import { GRID, INDEX } from 'typings'\n\nfunction copyGrid(grid: GRID): GRID {\n  const gridCopy: GRID = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ]\n\n  for (let r: INDEX = 0; r < 9; ++r) {\n    for (let c: INDEX = 0; c < 9; ++c) {\n      gridCopy[r][c] = grid[r][c]\n    }\n  }\n  return gridCopy\n}\n\nexport default copyGrid\n","import { GRID } from 'typings'\nimport { fillGrid } from 'utils'\n\nfunction createFullGrid(): GRID {\n  const grid: GRID = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ]\n  fillGrid(grid)\n  return grid\n}\n\nexport default createFullGrid\n","import { GRID, NUMBERS } from 'typings'\nimport {\n  identifySquare,\n  shuffle,\n  isInRow,\n  isInCol,\n  isInSquare,\n  checkGrid,\n} from 'utils'\n\nconst numbers: NUMBERS[] = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nfunction fillGrid(grid: GRID) {\n  let row = 0\n  let col = 0\n  for (let i = 0; i < 81; ++i) {\n    row = Math.floor(i / 9)\n    col = i % 9\n\n    if (grid[row][col] === 0) {\n      shuffle(numbers)\n\n      for (let value of numbers) {\n        if (!isInRow({ grid, row, value })) {\n          if (!isInCol({ grid, col, value })) {\n            const square = identifySquare({ grid, row, col })\n            if (!isInSquare({ square, value })) {\n              grid[row][col] = value\n              if (checkGrid(grid)) return true\n              else if (fillGrid(grid)) return true\n            }\n          }\n        }\n      }\n      break\n    }\n  }\n  grid[row][col] = 0\n}\n\nexport default fillGrid\n","function getRandomIndex() {\n  return Math.floor(Math.random() * Math.floor(9))\n}\n\nexport default getRandomIndex\n","import { SQUARE, GRID } from 'typings'\ninterface IInput {\n  grid: GRID\n  row: number\n  col: number\n}\nfunction identifyWorkingSquare({ grid, row, col }: IInput): SQUARE {\n  const square = []\n  if (row < 3) {\n    if (col < 3) {\n      for (let x = 0; x < 3; ++x) {\n        square.push([grid[x][0], grid[x][1], grid[x][2]])\n      }\n    } else if (col < 6) {\n      for (let x = 0; x < 3; ++x) {\n        square.push([grid[x][3], grid[x][4], grid[x][5]])\n      }\n    } else {\n      for (let x = 0; x < 3; ++x) {\n        square.push([grid[x][6], grid[x][7], grid[x][8]])\n      }\n    }\n  } else if (row < 6) {\n    if (col < 3) {\n      for (let x = 3; x < 6; ++x) {\n        square.push([grid[x][0], grid[x][1], grid[x][2]])\n      }\n    } else if (col < 6) {\n      for (let x = 3; x < 6; ++x) {\n        square.push([grid[x][3], grid[x][4], grid[x][5]])\n      }\n    } else {\n      for (let x = 3; x < 6; ++x) {\n        square.push([grid[x][6], grid[x][7], grid[x][8]])\n      }\n    }\n  } else {\n    if (col < 3) {\n      for (let x = 6; x < 9; ++x) {\n        square.push([grid[x][0], grid[x][1], grid[x][2]])\n      }\n    } else if (col < 6) {\n      for (let x = 6; x < 9; ++x) {\n        square.push([grid[x][3], grid[x][4], grid[x][5]])\n      }\n    } else {\n      for (let x = 6; x < 9; ++x) {\n        square.push([grid[x][6], grid[x][7], grid[x][8]])\n      }\n    }\n  }\n  return square as SQUARE\n}\n\nexport default identifyWorkingSquare\n","export default {\n  counter: 0,\n}\n","import global from 'global'\nimport { GRID } from 'typings'\nimport { copyGrid, getRandomIndex, solveGrid } from 'utils'\n\nfunction removeNumbers(grid: GRID, attempts = 5): GRID {\n  while (attempts > 0) {\n    let row = getRandomIndex()\n    let col = getRandomIndex()\n\n    while (grid[row][col] === 0) {\n      row = getRandomIndex()\n      col = getRandomIndex()\n    }\n\n    const backup = grid[row][col]\n    grid[row][col] = 0\n\n    const gridCopy = copyGrid(grid)\n\n    global.counter = 0\n    solveGrid(gridCopy)\n\n    if (global.counter !== 1) {\n      grid[row][col] = backup\n      attempts--\n    }\n  }\n  return grid\n}\n\nexport default removeNumbers\n","const shuffle = (array: any[]) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * i)\n    ;[array[i], array[j]] = [array[j], array[i]]\n  }\n}\n\nexport default shuffle\n","import global from 'global'\nimport { GRID, NUMBERS } from 'typings'\nimport { checkGrid, identifySquare, isInRow, isInCol, isInSquare } from 'utils'\n\nconst numbers: NUMBERS[] = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nfunction solveGrid(grid: GRID) {\n  let row = 0\n  let col = 0\n\n  for (let i = 0; i < 81; ++i) {\n    row = Math.floor(i / 9)\n    col = i % 9\n\n    if (grid[row][col] === 0) {\n      for (let value of numbers) {\n        if (!isInRow({ grid, row, value })) {\n          if (!isInCol({ grid, col, value })) {\n            const square = identifySquare({ grid, row, col })\n            if (!isInSquare({ square, value })) {\n              grid[row][col] = value\n              if (checkGrid(grid)) {\n                global.counter++\n                break\n              } else if (solveGrid(grid)) {\n                return true\n              }\n            }\n          }\n        }\n      }\n      break\n    }\n  }\n  grid[row][col] = 0\n}\n\nexport default solveGrid\n","import { GRID, NUMBERS } from 'typings'\ninterface IInput {\n  grid: GRID\n  row: number\n  value: NUMBERS\n}\n\nfunction isInRow({ grid, row, value }: IInput): boolean {\n  return grid[row].includes(value)\n}\n\nexport default isInRow\n","import { GRID, NUMBERS } from 'typings'\ninterface IInput {\n  grid: GRID\n  col: number\n  value: NUMBERS\n}\n\nfunction isInCol({ grid, col, value }: IInput): boolean {\n  for (let i = 0; i < 9; i++) if (value === grid[i][col]) return true\n  return false\n}\n\nexport default isInCol\n","import { NUMBERS, SQUARE } from 'typings'\n\ninterface IInput {\n  square: SQUARE\n  value: NUMBERS\n}\n\nconst isInSquare: ({ square, value }: IInput) => boolean = ({\n  square,\n  value,\n}) => {\n  return [...square[0], ...square[1], ...square[2]].includes(value)\n}\n\nexport default isInSquare\n","import { AnyAction } from 'redux'\nimport { compareArrays, copyGrid, createFullGrid, removeNumbers } from 'utils'\nimport { GRID } from 'typings'\nimport { IReducer } from './interfaces'\nimport * as types from './types'\n\nconst initialState: IReducer = {}\n\nfunction reducer(state = initialState, action: AnyAction) {\n  switch (action.type) {\n    case types.CREATE_GRID:\n      const solvedGrid = createFullGrid()\n      const gridCopy = copyGrid(solvedGrid)\n      const challengeGrid = removeNumbers(gridCopy)\n      const workingGrid = copyGrid(challengeGrid)\n      return {\n        ...state,\n        challengeGrid,\n        solvedGrid,\n        workingGrid,\n      }\n\n    case types.FILL_BLOCK: {\n      if (state.workingGrid && state.solvedGrid) {\n        if (\n          state.solvedGrid[action.coords[0]][action.coords[1]] !== action.value\n        ) {\n          alert('Incorrect Option!')\n          return state\n        }\n        state.workingGrid[action.coords[0]][action.coords[1]] = action.value\n        if (compareArrays(state.workingGrid, state.solvedGrid)) {\n          alert('Completed!')\n        }\n        return {\n          ...state,\n          workingGrid: [...state.workingGrid] as GRID,\n        }\n      }\n      return state\n    }\n\n    case types.SELECT_BLOCK:\n      return {\n        ...state,\n        selectedBlock: action.coords,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import styled, { css } from 'styled-components'\n\ninterface IProps {\n  active?: boolean\n  puzzle?: boolean\n}\n\nexport const Container = styled.div<IProps>`\n  ${({ active, puzzle, theme }) => css`\n    align-items: center;\n    background-color: ${active ? theme.colors.blue : theme.colors.white};\n    border: solid 1px ${theme.colors.black};\n    cursor: pointer;\n    display: flex;\n    flex-grow: 1;\n    flex-shrink: 0;\n    flex-basis: 0;\n    font-size: 20px;\n    font-weight: ${puzzle ? 'bold' : 'normal'};\n    height: auto;\n    justify-content: center;\n    transition: ${theme.transition};\n    user-select: none;\n\n    &:before {\n      padding-top: 100%;\n      content: '';\n      float: left;\n    }\n\n    &:hover {\n      background-color: ${theme.colors.lightBlue};\n    }\n  `}\n`\n","import React, { FC } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Dispatch, AnyAction } from 'redux'\nimport { IReducer, selectBlock } from 'reducers'\nimport { Container } from './styles'\nimport { N, INDEX } from 'typings'\n\ninterface IProps {\n  colIndex: INDEX\n  rowIndex: INDEX\n}\n\ninterface IState {\n  isActive: boolean\n  isPuzzle: boolean\n  value: N\n}\n\nconst Block: FC<IProps> = ({ colIndex, rowIndex }) => {\n  const state = useSelector<IReducer, IState>(\n    ({ challengeGrid, selectedBlock, workingGrid }) => ({\n      isActive: selectedBlock\n        ? selectedBlock[0] === rowIndex && selectedBlock[1] === colIndex\n        : false,\n      isPuzzle:\n        challengeGrid && challengeGrid[rowIndex][colIndex] !== 0 ? true : false,\n      value: workingGrid ? workingGrid[rowIndex][colIndex] : 0,\n    })\n  )\n\n  const dispatch = useDispatch<Dispatch<AnyAction>>()\n\n  function handleClick() {\n    if (!state.isActive) dispatch(selectBlock([rowIndex, colIndex]))\n  }\n\n  return (\n    <Container\n      active={state.isActive}\n      data-cy={`block-${rowIndex}-${colIndex}`}\n      onClick={handleClick}\n      puzzle={state.isPuzzle}\n    >\n      {state.value === 0 ? '' : state.value}\n    </Container>\n  )\n}\n\nexport default Block\n","import styled, { css } from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 10px 0;\n`\n\nexport const Row = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-flow: row;\n\n    &:nth-child(3n-2) {\n      div {\n        border-top: solid 4px ${theme.colors.black};\n      }\n    }\n    &:last-child {\n      div {\n        border-bottom: solid 4px ${theme.colors.black};\n      }\n    }\n    div {\n      &:nth-child(3n-2) {\n        border-left: solid 4px ${theme.colors.black};\n      }\n      &:last-child {\n        border-right: solid 4px ${theme.colors.black};\n      }\n    }\n  `}\n`\n","import React, { FC, Children, useCallback, useEffect } from 'react'\nimport useMousetrap from 'react-hook-mousetrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction, Dispatch } from 'redux'\nimport { createGrid, IReducer, selectBlock, fillBlock } from 'reducers'\nimport { BLOCK_COORDS, GRID, INDEX, N, NUMBERS } from 'typings'\nimport Block from './block'\nimport { Container, Row } from './styles'\n\ninterface IState {\n  selectedBlock?: BLOCK_COORDS\n  selectedValue: N\n  solvedGrid?: GRID\n}\n\nconst Grid: FC = () => {\n  const state = useSelector<IReducer, IState>(\n    ({ selectedBlock, solvedGrid, workingGrid }) => ({\n      selectedBlock,\n      selectedValue:\n        workingGrid && selectedBlock\n          ? workingGrid[selectedBlock[0]][selectedBlock[1]]\n          : 0,\n      solvedGrid,\n    })\n  )\n  const dispatch = useDispatch<Dispatch<AnyAction>>()\n  const create = useCallback(() => dispatch(createGrid()), [dispatch])\n\n  const fill = useCallback(\n    (n: NUMBERS) => {\n      if (state.selectedBlock && state.selectedValue === 0) {\n        dispatch(fillBlock(n, state.selectedBlock))\n      }\n    },\n    [dispatch, state.selectedBlock, state.selectedValue]\n  )\n\n  function moveUp() {\n    if (state.selectedBlock && state.selectedBlock[0] > 0) {\n      dispatch(\n        selectBlock([\n          (state.selectedBlock[0] - 1) as INDEX,\n          state.selectedBlock[1],\n        ])\n      )\n    }\n  }\n\n  function moveDown() {\n    if (state.selectedBlock && state.selectedBlock[0] < 8) {\n      dispatch(\n        selectBlock([\n          (state.selectedBlock[0] + 1) as INDEX,\n          state.selectedBlock[1],\n        ])\n      )\n    }\n  }\n\n  function moveLeft() {\n    if (state.selectedBlock && state.selectedBlock[1] > 0) {\n      dispatch(\n        selectBlock([\n          state.selectedBlock[0],\n          (state.selectedBlock[1] - 1) as INDEX,\n        ])\n      )\n    }\n  }\n\n  function moveRight() {\n    if (state.selectedBlock && state.selectedBlock[1] < 8) {\n      dispatch(\n        selectBlock([\n          state.selectedBlock[0],\n          (state.selectedBlock[1] + 1) as INDEX,\n        ])\n      )\n    }\n  }\n\n  useMousetrap('1', () => fill(1))\n  useMousetrap('2', () => fill(2))\n  useMousetrap('3', () => fill(3))\n  useMousetrap('4', () => fill(4))\n  useMousetrap('5', () => fill(5))\n  useMousetrap('6', () => fill(6))\n  useMousetrap('7', () => fill(7))\n  useMousetrap('8', () => fill(8))\n  useMousetrap('9', () => fill(9))\n\n  useMousetrap('down', moveDown)\n  useMousetrap('left', moveLeft)\n  useMousetrap('right', moveRight)\n  useMousetrap('up', moveUp)\n\n  useEffect(() => {\n    if (!state.solvedGrid) {\n      create()\n    }\n  }, [create, state.solvedGrid])\n\n  return (\n    <Container data-cy=\"grid-container\">\n      {Children.toArray(\n        [...Array(9)].map((_, rowIndex) => (\n          <Row data-cy=\"grid-row-container\">\n            {Children.toArray(\n              [...Array(9)].map((_, colIndex) => (\n                <Block\n                  colIndex={colIndex as INDEX}\n                  rowIndex={rowIndex as INDEX}\n                />\n              ))\n            )}\n          </Row>\n        ))\n      )}\n    </Container>\n  )\n}\n\nexport default Grid\n","import React, { FC, useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Action, Dispatch } from 'redux'\nimport { Button } from 'components'\nimport { createGrid } from 'reducers'\n\nconst NewButton: FC = () => {\n  const dispatch = useDispatch<Dispatch<Action>>()\n\n  const createNewGrid = useCallback(() => {\n    if (window.confirm('Are you sure you want to start a new game?')) {\n      dispatch(createGrid())\n    }\n  }, [dispatch])\n  return <Button onClick={createNewGrid}>New Game</Button>\n}\n\nexport default NewButton\n","import React, { FC, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction, Dispatch } from 'redux'\n\nimport { Button } from 'components'\nimport { fillBlock, IReducer } from 'reducers'\nimport { BLOCK_COORDS, N, NUMBERS } from 'typings'\n\ninterface IProps {\n  value: NUMBERS\n}\n\ninterface IState {\n  selectedBlock?: BLOCK_COORDS\n  selectedValue: N\n}\n\nconst NumberButton: FC<IProps> = ({ value }) => {\n  const state = useSelector<IReducer, IState>(\n    ({ selectedBlock, workingGrid }) => ({\n      selectedBlock,\n      selectedValue:\n        workingGrid && selectedBlock\n          ? workingGrid[selectedBlock[0]][selectedBlock[1]]\n          : 0,\n    })\n  )\n  const dispatch = useDispatch<Dispatch<AnyAction>>()\n\n  const fill = useCallback(() => {\n    if (state.selectedBlock && state.selectedValue === 0) {\n      dispatch(fillBlock(value, state.selectedBlock))\n    }\n  }, [dispatch, state.selectedBlock, state.selectedValue, value])\n\n  return <Button onClick={fill}>{value}</Button>\n}\n\nexport default NumberButton\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  flex-flow: row;\n`\n","import React, { FC } from 'react'\nimport { NUMBERS } from 'typings'\nimport Button from './button'\nimport { Container } from './styles'\n\nconst Numbers: FC = () => (\n  <Container>\n    {([1, 2, 3, 4, 5, 6, 7, 8, 9] as NUMBERS[]).map((value) => (\n      <Button key={value} value={value} />\n    ))}\n  </Container>\n)\n\nexport default Numbers\n","import styled, { css } from 'styled-components'\n\nexport const Button = styled.button`\n  ${({ theme }) => css`\n    align-items: center;\n    background-color: ${theme.colors.black};\n    border: 2px solid ${theme.colors.black};\n    border-radius: 4px;\n    color: ${theme.colors.white};\n    cursor: pointer;\n    display: flex;\n    flex: 1;\n    font-size: 16px;\n    font-weight: bold;\n    height: 40px;\n    justify-content: center;\n    margin: 4px 2px;\n    min-height: 40px;\n    opacity: 0.9;\n    padding: 0;\n    transition: ${theme.transition};\n\n    &:focus {\n      border-color: ${theme.colors.blue};\n      outline: none;\n    }\n\n    &:hover {\n      opacity: 0.6;\n    }\n  `}\n`\n","import styled, { css } from 'styled-components'\n\nexport const Card = styled.div`\n  ${({ theme }) => css`\n    background-color: ${theme.colors.white};\n    border-radius: 15px;\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    max-height: fit-content;\n    padding: 15px;\n  `}\n`\n","import styled from 'styled-components'\n\nexport const Content = styled.div`\n  max-width: 500px;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n`\n","import styled, { css } from 'styled-components'\n\nexport const Title = styled.h1`\n  ${({ theme }) => css`\n    color: ${theme.colors.white};\n    margin-top: 0;\n    text-align: center;\n  `}\n`\n","import { createStore } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { devToolsEnhancer } from 'redux-devtools-extension'\nimport reducer from 'reducers'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, reducer)\n\nfunction configureStore() {\n  const store = createStore(persistedReducer, devToolsEnhancer({}))\n  const persistor = persistStore(store)\n  return { persistor, store }\n}\n\nexport default configureStore\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { createGlobalStyle, css } from 'styled-components'\n\nexport default createGlobalStyle`\n${({ theme }) => css`\n  html {\n    height: 100%;\n\n    body {\n      display: flex;\n      flex-direction: column;\n      height: 100%;\n      margin: 0;\n\n      #root {\n        background: ${theme.colors.background};\n        color: ${theme.colors.black};\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        padding: 15px;\n      }\n    }\n  }\n`}\n`\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'styled-components'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { Card, Content, Grid, NewButton, Numbers, Title } from './components'\nimport { configureStore, register } from './core'\nimport { GlobalStyles, theme } from './styles'\n\nconst { persistor, store } = configureStore()\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <GlobalStyles />\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Content data-cy=\"content\">\n          <Title data-cy=\"title\">Sudoku</Title>\n          <Card data-cy=\"card\">\n            <NewButton />\n            <Grid />\n            <Numbers />\n          </Card>\n        </Content>\n      </PersistGate>\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n\nregister()\n","export default {\n  colors: {\n    background: 'radial-gradient(#282c34CC, #282c34)',\n    black: '#282c34',\n    blue: '#a0e9fd',\n    lightBlue: '#caf3fe',\n    white: 'white',\n  },\n  transition: '0.3s',\n}\n","export const CREATE_GRID = 'CREATE_GRID'\nexport const FILL_BLOCK = 'FILL_BLOCK'\nexport const SELECT_BLOCK = 'SELECT_BLOCK'\n"],"sourceRoot":""}